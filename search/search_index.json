{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction This user guide explains how to use your new Password Thing (abbreviated as PT in the rest of this document). WARNING The Password Thing is a convenience device, NOT a security device. It increases your security by removing the temptation to choose easily-remembered (and therefore easily guessable) master passwords. It decreases your security by storing your master password unencrypted in a device that can be lost or borrowed/stolen if you are not careful. We recommend that you carry your PT on a keychain together with your other important keys. Motivation and Purpose We all use password managers to store our passwords for the hundreds or thousands of websites and accounts we visit that require passwords. However, there are two passwords that we still need to memorize (or write on a sticky note), namely our computer password and the password for the password manager. The Password Thing allows you to generate strong passwords for your computer and password manager, and to store them in a physical device, so that you do not have to remember them. Security The Password Thing is intended to disrupt your workflow as little as possible. Also the nature of the Thing means that it cannot secure stored passwords with a secure password, since that would defeat the whole purpose of using the device in the first place. Therefore you should treat the PT as you would a physical key that protects valuable assests, like a safe filled with valuables. The PT can be configured to require a 4-button sequence to be tapped before it will operate. This provides a basic minimal layer of security against casual use by unathorized people, but it will not deter a determined attacker, and can be trivially bypassed through brute force or by using the serial port setup / debug mechanism. Threat model Think of the PT as an old-fashioned key. You may own, lease or rent a car and/or a house which is secured by nothing more than a key. If someoone really wants to take your car, they can steal your key, or beat you with a rubber hose until you give it to them. Your only protection is the law. If you lose your key, there is a level of security afforded by the fact that it is not immediately obvious what car or house the key belongs to. If someone takes the key off your desk, they may know exactly where your car is parked or where you live. The PT is the same, just for your computer. If someone really wants to get into your computer, they could always beat you with a rubber hose until you give them the password. If you lose a PT, chances are that nobody will know what it is or who it belongs to. But if you walk away from your computer and leave the PT stuck in a USB port, you make a thief's life much easier. Theory of operation The PT has six 'slots' for storing passwords and optionally userids. Each slot can store a userid and a password up to 30 characters in length. The PT can auto-generate a password for each slot, but userids have to be entered through the configuration interface. To use the PT, connect it to a USB port, select the appropriate slot using the Next button (see below for button assignments), move your cursor to the password field (if needed) and press the Select button. The PT will emulate a USB keyboard and 'type' the password stored in the slot. button. Models Model U The PT model U has a female micro usb port, which can be connected to USB A or C ports on your computer via an adapter cable. It has an OLED display, LED indicators and and three buttons. Model A The PT model A is tiny and plugs directly into a USB A port. It has LED indicators but no display and only 2 buttons. Buttons The function of the buttons can be re-assigned (See the Configuration section). The default functions are shown below. Each button behaves differently depending on whether it was pressed a short time (less than one second) or longer than a second. Short press on Select Sends the password stored in the current slot (if any) to the computer via the emulated keyboard interface. The password entry is followed by an emulated Enter key. If there is a userid stored in the slot (see Configurationsection) then the PT will send the userid, followed by a Tab character, followed by the password, followed by Enter. Short press on Next or Long press on Select Advances to the next Slot. The PT model A does not have a Next button, so the only way to select a slot is via a long press on Select. Short press on Generate Sends the password in the current slot to the computer, but without sending an Enter key press. This feature often comes in handy when changing passwords. The userid is never sent. Long press on Generate Generates a new password for the current slot. By default, a 20 character alphanumeric password, including special characters, is generated. LED indicators The PT has two indicator LEDs. One is a monochrome led, which is only used to indicate that the software in the PT is running, by blinking on and off every second. The second LED can display colors and is used to indicate the curent slot or mode. White The LED briefly flashes white during startup. When Configuration mode is selected (see configuration on the left), the LED is solid white until a serial terminal program is connected. Once the terminal is connected, the LED remains white but turns off briefly once a second. Yellow When the PT is passcode-locked, the RGB led will be Yellow. Other colors The rest of the colors indicate the current Slot, as shown in the following table. Slot Color 1 Red 2 Yellow 3 Green 4 Magenta 5 Blue 6 Cyan When a slot contains a valid password, the LED shows a solid color, otherwise it blinks at a fast rate. Best Practice The PT can fail, or it can lose its nonvolatile memory due to a bug or other issue. It is therefore crucual to ensure that it is not a single point of failure. For eaxample, think about what would happen if the only copy of your password manager password is stored in your PT. If you lose it, or it breaks, you are locked out of all your passwords. When you generate a new important password, wether through the Generate button, the configuration interface or through another method (and use the configuration interface to store it on the PT), you should make a copy of the password immediately and store it somehwere safe. Good practice is to store a copy of all your passwords on another PT and to keeup that in a safe place offsite (like a safe deposit box).","title":"Home"},{"location":"#introduction","text":"This user guide explains how to use your new Password Thing (abbreviated as PT in the rest of this document).","title":"Introduction"},{"location":"#warning","text":"The Password Thing is a convenience device, NOT a security device. It increases your security by removing the temptation to choose easily-remembered (and therefore easily guessable) master passwords. It decreases your security by storing your master password unencrypted in a device that can be lost or borrowed/stolen if you are not careful. We recommend that you carry your PT on a keychain together with your other important keys.","title":"WARNING"},{"location":"#motivation-and-purpose","text":"We all use password managers to store our passwords for the hundreds or thousands of websites and accounts we visit that require passwords. However, there are two passwords that we still need to memorize (or write on a sticky note), namely our computer password and the password for the password manager. The Password Thing allows you to generate strong passwords for your computer and password manager, and to store them in a physical device, so that you do not have to remember them.","title":"Motivation and Purpose"},{"location":"#security","text":"The Password Thing is intended to disrupt your workflow as little as possible. Also the nature of the Thing means that it cannot secure stored passwords with a secure password, since that would defeat the whole purpose of using the device in the first place. Therefore you should treat the PT as you would a physical key that protects valuable assests, like a safe filled with valuables. The PT can be configured to require a 4-button sequence to be tapped before it will operate. This provides a basic minimal layer of security against casual use by unathorized people, but it will not deter a determined attacker, and can be trivially bypassed through brute force or by using the serial port setup / debug mechanism.","title":"Security"},{"location":"#threat-model","text":"Think of the PT as an old-fashioned key. You may own, lease or rent a car and/or a house which is secured by nothing more than a key. If someoone really wants to take your car, they can steal your key, or beat you with a rubber hose until you give it to them. Your only protection is the law. If you lose your key, there is a level of security afforded by the fact that it is not immediately obvious what car or house the key belongs to. If someone takes the key off your desk, they may know exactly where your car is parked or where you live. The PT is the same, just for your computer. If someone really wants to get into your computer, they could always beat you with a rubber hose until you give them the password. If you lose a PT, chances are that nobody will know what it is or who it belongs to. But if you walk away from your computer and leave the PT stuck in a USB port, you make a thief's life much easier.","title":"Threat model"},{"location":"#theory-of-operation","text":"The PT has six 'slots' for storing passwords and optionally userids. Each slot can store a userid and a password up to 30 characters in length. The PT can auto-generate a password for each slot, but userids have to be entered through the configuration interface. To use the PT, connect it to a USB port, select the appropriate slot using the Next button (see below for button assignments), move your cursor to the password field (if needed) and press the Select button. The PT will emulate a USB keyboard and 'type' the password stored in the slot. button.","title":"Theory of operation"},{"location":"#models","text":"","title":"Models"},{"location":"#model-u","text":"The PT model U has a female micro usb port, which can be connected to USB A or C ports on your computer via an adapter cable. It has an OLED display, LED indicators and and three buttons.","title":"Model U"},{"location":"#model-a","text":"The PT model A is tiny and plugs directly into a USB A port. It has LED indicators but no display and only 2 buttons.","title":"Model A"},{"location":"#buttons","text":"The function of the buttons can be re-assigned (See the Configuration section). The default functions are shown below. Each button behaves differently depending on whether it was pressed a short time (less than one second) or longer than a second.","title":"Buttons"},{"location":"#short-press-on-select","text":"Sends the password stored in the current slot (if any) to the computer via the emulated keyboard interface. The password entry is followed by an emulated Enter key. If there is a userid stored in the slot (see Configurationsection) then the PT will send the userid, followed by a Tab character, followed by the password, followed by Enter.","title":"Short press on Select"},{"location":"#short-press-on-next-or-long-press-on-select","text":"Advances to the next Slot. The PT model A does not have a Next button, so the only way to select a slot is via a long press on Select.","title":"Short press on Next or Long press on Select"},{"location":"#short-press-on-generate","text":"Sends the password in the current slot to the computer, but without sending an Enter key press. This feature often comes in handy when changing passwords. The userid is never sent.","title":"Short press on Generate"},{"location":"#long-press-on-generate","text":"Generates a new password for the current slot. By default, a 20 character alphanumeric password, including special characters, is generated.","title":"Long press on Generate"},{"location":"#led-indicators","text":"The PT has two indicator LEDs. One is a monochrome led, which is only used to indicate that the software in the PT is running, by blinking on and off every second. The second LED can display colors and is used to indicate the curent slot or mode.","title":"LED indicators"},{"location":"#white","text":"The LED briefly flashes white during startup. When Configuration mode is selected (see configuration on the left), the LED is solid white until a serial terminal program is connected. Once the terminal is connected, the LED remains white but turns off briefly once a second.","title":"White"},{"location":"#yellow","text":"When the PT is passcode-locked, the RGB led will be Yellow.","title":"Yellow"},{"location":"#other-colors","text":"The rest of the colors indicate the current Slot, as shown in the following table. Slot Color 1 Red 2 Yellow 3 Green 4 Magenta 5 Blue 6 Cyan When a slot contains a valid password, the LED shows a solid color, otherwise it blinks at a fast rate.","title":"Other colors"},{"location":"#best-practice","text":"The PT can fail, or it can lose its nonvolatile memory due to a bug or other issue. It is therefore crucual to ensure that it is not a single point of failure. For eaxample, think about what would happen if the only copy of your password manager password is stored in your PT. If you lose it, or it breaks, you are locked out of all your passwords. When you generate a new important password, wether through the Generate button, the configuration interface or through another method (and use the configuration interface to store it on the PT), you should make a copy of the password immediately and store it somehwere safe. Good practice is to store a copy of all your passwords on another PT and to keeup that in a safe place offsite (like a safe deposit box).","title":"Best Practice"},{"location":"configuration/","text":"Introduction The Password Thing (PT) provides a \"configuration\" interface to allow you to use extended functionality that would be difficult to implement using just the three (or two) buttons on the device. The actual code running on the PT is documented in the Hardware and Software section of this manual. Software To access Configuration mode, you need a Serial Terminal Emulator, since the PT emulates a serial port. CoolTerm is one option that works fine, but you can use any terminal emulator that supports USB serial ports. Settings The connection settings are: 115200 N 8 1 (115,200 baud, no parity, 8 data bits, 1 stop bit). The terminal emulator should also be configured to assert DTR and RTS on startup. Entering Configurationmode To enter configuration mode, press any button while plugging the PT into a USB port. The LED will be solid white until the terminal emulator connects (asserts DTR/RTS) and then the LED will blink off briefly once a second to indicate configuration mode. Commands Help You can press '?' or 'h' at any Slot prompt to get a list of available commands. Slot number The serial terminal should now show a prompt with the current Slot number (0). You can press 'S' followed by a slot number in the range 0-5 to change the current slot. Shortcut: just press the numeric key corresponding to the desired slot number Other commands to change the slot are 'N' for Next slot and 'R' for pRevious slot. Print password Pressing 'P' prints the password (and userid, if there is one) stored in the current slot. Enter Userid Press 'U' to enter a new Userid for the slot. The maximum lenght of a userid is 30 characters. Enter Password press 'O' to enter a new password for the current slot. The password may contain numbers, letters, spaces and special characters. Maximum length is 30 characters. Set password generator Mode Press 'M' to set the mode for subsequent generated passwords. The options are Alphabetic, Numeric, Alphanumeric and Special (allow special characters) The mode only applies to passwords generated via the configuration interface, and a mode change only lasts for the current serial terminal sesssion. Set password generator Length Press 'L' to set the length of subsequent generated passwords. The length only applies to passwords generated via the configuration interface, and a length change only lasts for the current serial terminal sesssion. Generate password Press 'G' to generate a new password for the currently selected slot. The Mode and Length selected above will determine the nature of the generated password. Clear slot Press 'C' to remove the userid and password stored in the current slot Duplicate slot Press 'A' to copy the userid and password stored in the current slot to another slot. This may be useful when changing your password on a site. Toggle running indicator By default the PT has a red flashing led to indicate that the software is running. If this indicator is too distracting, you can press 'B' to disable it. The status of the indicator is stored in nonvolatile memory and survives unplugging or restarting of the PT. Privacy timeout The PT model U displays passwords on the OLED display when they are generated to entered. For security / privacy reasons, the display blanks after 10 seconds by default. Press 'I' to adjust the pre-blank timeout. Enter a value of 0 to disable blanking completely. The timeout is stored in nonvolatile memory and survives unplugging or restarting of the PT. Colour LED timeout Some users find the bright colour LED on the PT distracting. There is an option to turn off the LED after a period of time. Press 'J' to adjust the timeout. Enter a value of 0 to disable. The timeout is stored in nonvolatile memory and survives unplugging or restarting of the PT. Flip display The display of the PT model U may appear upside down depending on the orientation in which you use it. Press 'F' to flip the display around. The flip value is stored in nonvolatile memory and survives unplugging or restarting of the PT. Reconfigure buttons Depending on the orientation in which you use your PT model U or the side of the computer where you plug in your model A, the default button layout may be awkward. You can press 'T' to move the key assignments around. The button assignment is stored in nonvolatile memory and survives unplugging or restarting of the PT. Reconfigure LED colours The sequence of colours indicating the various slots may be adjusted. Press 'K' to change to colour assignment. The colour assignment is stored in nonvolatile memory and survives unplugging or restarting of the PT. Set security sequence To provide protection against casual unathorized use of the PT, it may be configured to require the user to press a button sequence before it will start operating. Press 'W' to set the security sequence. A security sequence is entered as a set of exactly four digits, with '1' , '2' and '3' being the only digits allowed. '1' refers to the Select button, '2' to the Next button and '3' to the Generate button. (Note that these are the original button definitions. If you remap the button function through the 'T' function described above, it will not affect the security button sequence at all. Example: A sequence of 1123 means pressing the Select button twice, then the Next button and then the Generate button. Show EEPROM Variables, Dump EEPROM, Zero EEPROM and Show Entropy These are diagnostic and repair functions. Do not use unless directed to do so by a customer service representative.","title":"Configuration"},{"location":"configuration/#introduction","text":"The Password Thing (PT) provides a \"configuration\" interface to allow you to use extended functionality that would be difficult to implement using just the three (or two) buttons on the device. The actual code running on the PT is documented in the Hardware and Software section of this manual.","title":"Introduction"},{"location":"configuration/#software","text":"To access Configuration mode, you need a Serial Terminal Emulator, since the PT emulates a serial port. CoolTerm is one option that works fine, but you can use any terminal emulator that supports USB serial ports.","title":"Software"},{"location":"configuration/#settings","text":"The connection settings are: 115200 N 8 1 (115,200 baud, no parity, 8 data bits, 1 stop bit). The terminal emulator should also be configured to assert DTR and RTS on startup.","title":"Settings"},{"location":"configuration/#entering-configurationmode","text":"To enter configuration mode, press any button while plugging the PT into a USB port. The LED will be solid white until the terminal emulator connects (asserts DTR/RTS) and then the LED will blink off briefly once a second to indicate configuration mode.","title":"Entering Configurationmode"},{"location":"configuration/#commands","text":"","title":"Commands"},{"location":"configuration/#help","text":"You can press '?' or 'h' at any Slot prompt to get a list of available commands.","title":"Help"},{"location":"configuration/#slot-number","text":"The serial terminal should now show a prompt with the current Slot number (0). You can press 'S' followed by a slot number in the range 0-5 to change the current slot. Shortcut: just press the numeric key corresponding to the desired slot number Other commands to change the slot are 'N' for Next slot and 'R' for pRevious slot.","title":"Slot number"},{"location":"configuration/#print-password","text":"Pressing 'P' prints the password (and userid, if there is one) stored in the current slot.","title":"Print password"},{"location":"configuration/#enter-userid","text":"Press 'U' to enter a new Userid for the slot. The maximum lenght of a userid is 30 characters.","title":"Enter Userid"},{"location":"configuration/#enter-password","text":"press 'O' to enter a new password for the current slot. The password may contain numbers, letters, spaces and special characters. Maximum length is 30 characters.","title":"Enter Password"},{"location":"configuration/#set-password-generator-mode","text":"Press 'M' to set the mode for subsequent generated passwords. The options are Alphabetic, Numeric, Alphanumeric and Special (allow special characters) The mode only applies to passwords generated via the configuration interface, and a mode change only lasts for the current serial terminal sesssion.","title":"Set password generator Mode"},{"location":"configuration/#set-password-generator-length","text":"Press 'L' to set the length of subsequent generated passwords. The length only applies to passwords generated via the configuration interface, and a length change only lasts for the current serial terminal sesssion.","title":"Set password generator Length"},{"location":"configuration/#generate-password","text":"Press 'G' to generate a new password for the currently selected slot. The Mode and Length selected above will determine the nature of the generated password.","title":"Generate password"},{"location":"configuration/#clear-slot","text":"Press 'C' to remove the userid and password stored in the current slot","title":"Clear slot"},{"location":"configuration/#duplicate-slot","text":"Press 'A' to copy the userid and password stored in the current slot to another slot. This may be useful when changing your password on a site.","title":"Duplicate  slot"},{"location":"configuration/#toggle-running-indicator","text":"By default the PT has a red flashing led to indicate that the software is running. If this indicator is too distracting, you can press 'B' to disable it. The status of the indicator is stored in nonvolatile memory and survives unplugging or restarting of the PT.","title":"Toggle running indicator"},{"location":"configuration/#privacy-timeout","text":"The PT model U displays passwords on the OLED display when they are generated to entered. For security / privacy reasons, the display blanks after 10 seconds by default. Press 'I' to adjust the pre-blank timeout. Enter a value of 0 to disable blanking completely. The timeout is stored in nonvolatile memory and survives unplugging or restarting of the PT.","title":"Privacy timeout"},{"location":"configuration/#colour-led-timeout","text":"Some users find the bright colour LED on the PT distracting. There is an option to turn off the LED after a period of time. Press 'J' to adjust the timeout. Enter a value of 0 to disable. The timeout is stored in nonvolatile memory and survives unplugging or restarting of the PT.","title":"Colour LED timeout"},{"location":"configuration/#flip-display","text":"The display of the PT model U may appear upside down depending on the orientation in which you use it. Press 'F' to flip the display around. The flip value is stored in nonvolatile memory and survives unplugging or restarting of the PT.","title":"Flip display"},{"location":"configuration/#reconfigure-buttons","text":"Depending on the orientation in which you use your PT model U or the side of the computer where you plug in your model A, the default button layout may be awkward. You can press 'T' to move the key assignments around. The button assignment is stored in nonvolatile memory and survives unplugging or restarting of the PT.","title":"Reconfigure buttons"},{"location":"configuration/#reconfigure-led-colours","text":"The sequence of colours indicating the various slots may be adjusted. Press 'K' to change to colour assignment. The colour assignment is stored in nonvolatile memory and survives unplugging or restarting of the PT.","title":"Reconfigure LED colours"},{"location":"configuration/#set-security-sequence","text":"To provide protection against casual unathorized use of the PT, it may be configured to require the user to press a button sequence before it will start operating. Press 'W' to set the security sequence. A security sequence is entered as a set of exactly four digits, with '1' , '2' and '3' being the only digits allowed. '1' refers to the Select button, '2' to the Next button and '3' to the Generate button. (Note that these are the original button definitions. If you remap the button function through the 'T' function described above, it will not affect the security button sequence at all. Example: A sequence of 1123 means pressing the Select button twice, then the Next button and then the Generate button.","title":"Set security sequence"},{"location":"configuration/#show-eeprom-variables-dump-eeprom-zero-eeprom-and-show-entropy","text":"These are diagnostic and repair functions. Do not use unless directed to do so by a customer service representative.","title":"Show EEPROM Variables, Dump EEPROM,  Zero EEPROM and Show Entropy"},{"location":"hardware_and_software/","text":"Circuit The circuit for the PT model U is shown below. The microprocessor board is a generic 32U4 \"Leonardo\" compatible board with a micro-usb connector. The board is available from Aliexpress and other vendors. PT-U circuit diagram Here are the bare boards used for the U and A versions of the project. !Boards](img/boards.jpg) Boards used for model U (left) and A (right) The RGB LED is a common-anode one. Resistor values can be tweaked to change brightness. The circuit for the model A is the same as shown above, , except that it uses the smaller board (sometimes called 'beetle' by online vendors). Note that you would typically not wire in an OLED display for a model A (although it is supported). The buttons are connected to D9, D8 and D7 as opposed to D9, D10, D11 in the model U. You may wish to ommit the middle (\"Next\") button on a model A, to allow the use of larger buttons, since a long press of \"Select\" has the same functionality. Finally, the model A board has a build-in LED on D6, so no need to connect an external monochrome LED. Assembly Any small momemtary pushbutton switches can be used for the buttons, and the project can be assembled many ways. The photos below show the front and back of model U and A assemblies. The \"sandwhich\" construction of the model U shown is very compact and allows the unit to be glued to your keyboard for easy access. (Only do this at home of course - see the Security section in the documentation). The images below show an example of an assembled model A board. Model A top view Model A bottom view In this instance, I installed three buttons, but I found it akward to use. I hihgly recommend using larger buttons, like in the model U example below, and using only two of them (#1 and #3) . The images below show an example of an assembled model U board. Model U front view Model U back view Software Build The platformio platform is recommended for compiling the code. Ensure that support for the Arduino Leonardo board is installed. There is a separate build specification for each of the two board types. Ensure that you build the correct one for your board, otherwise the buttons and led will not work correctly. Documentation This documentation was generated with mkdocs. There is a yaml file in the root of the repository. Coding Style Hey, I learned C++ shortly after it was invented, in the 90s, and I am sure that is reflected in my coding style. I am aware of recent developments in the language, which could make this code much more compact and efficient, but this is a hobby project and I have a day job. Feel free to submit improvements.","title":"Hardware and Software"},{"location":"hardware_and_software/#circuit","text":"The circuit for the PT model U is shown below. The microprocessor board is a generic 32U4 \"Leonardo\" compatible board with a micro-usb connector. The board is available from Aliexpress and other vendors. PT-U circuit diagram Here are the bare boards used for the U and A versions of the project. !Boards](img/boards.jpg) Boards used for model U (left) and A (right) The RGB LED is a common-anode one. Resistor values can be tweaked to change brightness. The circuit for the model A is the same as shown above, , except that it uses the smaller board (sometimes called 'beetle' by online vendors). Note that you would typically not wire in an OLED display for a model A (although it is supported). The buttons are connected to D9, D8 and D7 as opposed to D9, D10, D11 in the model U. You may wish to ommit the middle (\"Next\") button on a model A, to allow the use of larger buttons, since a long press of \"Select\" has the same functionality. Finally, the model A board has a build-in LED on D6, so no need to connect an external monochrome LED.","title":"Circuit"},{"location":"hardware_and_software/#assembly","text":"Any small momemtary pushbutton switches can be used for the buttons, and the project can be assembled many ways. The photos below show the front and back of model U and A assemblies. The \"sandwhich\" construction of the model U shown is very compact and allows the unit to be glued to your keyboard for easy access. (Only do this at home of course - see the Security section in the documentation). The images below show an example of an assembled model A board. Model A top view Model A bottom view In this instance, I installed three buttons, but I found it akward to use. I hihgly recommend using larger buttons, like in the model U example below, and using only two of them (#1 and #3) . The images below show an example of an assembled model U board. Model U front view Model U back view","title":"Assembly"},{"location":"hardware_and_software/#software-build","text":"The platformio platform is recommended for compiling the code. Ensure that support for the Arduino Leonardo board is installed. There is a separate build specification for each of the two board types. Ensure that you build the correct one for your board, otherwise the buttons and led will not work correctly.","title":"Software Build"},{"location":"hardware_and_software/#documentation","text":"This documentation was generated with mkdocs. There is a yaml file in the root of the repository.","title":"Documentation"},{"location":"hardware_and_software/#coding-style","text":"Hey, I learned C++ shortly after it was invented, in the 90s, and I am sure that is reflected in my coding style. I am aware of recent developments in the language, which could make this code much more compact and efficient, but this is a hobby project and I have a day job. Feel free to submit improvements.","title":"Coding Style"},{"location":"technical/","text":"Pasword Generation The entropy harvester for the password generator is based on a scheme documented at https://gist.github.com/endolith/2568571 . When you plug the Password Thing into a USB port it starts to harvest entropy by periodically sampling the lower buts of a fast-running timer. The bits are scrambled and combined to generate one bit of entropy for each software cycle or SysTick. The default systick interval is 100ms, but when the amount of available entropy is low, such as right after startup, the entropy harvester is run every 1ms during idle time. Up to 256 bytes of entropy are stored in a queue to be used by the password generator. The stored entropy is used to create password characters from the available character set, which may be modified by the user through the configuration interface. Some entropy is wasted on thrown-away bits to avoid modulo bias so that the randomness of the generated passwords are not dependent on the selected character set. Configuration interface issues The configuration user interface is not very fault tolerant and bad input can cause it to go into a state where nothing seems to work properly, In that case, just unplug and restart the configuration session. If password generation or entry stops working for a slot, use the Generate button to generate a password for the slot in normal mode, and try again.","title":"Technical"},{"location":"technical/#pasword-generation","text":"The entropy harvester for the password generator is based on a scheme documented at https://gist.github.com/endolith/2568571 . When you plug the Password Thing into a USB port it starts to harvest entropy by periodically sampling the lower buts of a fast-running timer. The bits are scrambled and combined to generate one bit of entropy for each software cycle or SysTick. The default systick interval is 100ms, but when the amount of available entropy is low, such as right after startup, the entropy harvester is run every 1ms during idle time. Up to 256 bytes of entropy are stored in a queue to be used by the password generator. The stored entropy is used to create password characters from the available character set, which may be modified by the user through the configuration interface. Some entropy is wasted on thrown-away bits to avoid modulo bias so that the randomness of the generated passwords are not dependent on the selected character set.","title":"Pasword Generation"},{"location":"technical/#configuration-interface-issues","text":"The configuration user interface is not very fault tolerant and bad input can cause it to go into a state where nothing seems to work properly, In that case, just unplug and restart the configuration session. If password generation or entry stops working for a slot, use the Generate button to generate a password for the slot in normal mode, and try again.","title":"Configuration interface issues"}]}